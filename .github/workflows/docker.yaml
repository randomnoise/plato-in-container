name: Docker CI

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  builder:
    env:
      IMAGE_NAME: plato-builder

    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        flavor: latest=true

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        file: builder.Dockerfile
        context: ./plato
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  emulator:
    env:
      IMAGE_NAME: plato-emulator

    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        flavor: latest=true

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        file: emulator.Dockerfile
        context: ./plato
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  image-layers:
    needs: [builder, emulator]

    runs-on: ubuntu-latest

    steps:
    - name: Check image layers
      run: |
        set -eux -o pipefail
        docker pull ghcr.io/randomnoise/plato-builder
        docker pull ghcr.io/randomnoise/plato-emulator
        docker images
        docker image history ghcr.io/randomnoise/plato-builder
        docker image history ghcr.io/randomnoise/plato-emulator
